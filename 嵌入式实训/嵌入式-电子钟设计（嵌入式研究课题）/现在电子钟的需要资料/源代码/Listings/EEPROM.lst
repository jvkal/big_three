C51 COMPILER V9.55   EEPROM                                                                04/19/2017 14:47:37 PAGE 1   


C51 COMPILER V9.55, COMPILATION OF MODULE EEPROM
OBJECT MODULE PLACED IN .\Objects\EEPROM.obj
COMPILER INVOKED BY: C:\Software\Keil_v5\C51\BIN\C51.EXE EEPROM.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Li
                    -stings\EEPROM.lst) OBJECT(.\Objects\EEPROM.obj)

line level    source

   1          
   2          #include "EEPROM.h"
   3          
   4          /*******************************************************************************
   5          * 函 数 名         : Delay1us()
   6          * 函数功能                 : 延时
   7          * 输    入         : 无
   8          * 输    出         : 无
   9          *******************************************************************************/
  10          
  11          void I2C_Delay10us()            //@11.0592MHz
  12          {
  13   1              unsigned char i;
  14   1      
  15   1              i = 2;
  16   1              while (--i);
  17   1      }
  18          
  19          void Delay1ms()         //@11.0592MHz
  20          {
  21   1              unsigned char i, j;
  22   1      
  23   1              _nop_();
  24   1              i = 2;
  25   1              j = 199;
  26   1              do
  27   1              {
  28   2                      while (--j);
  29   2              } while (--i);
  30   1      }
  31          
  32          
  33          /*******************************************************************************
  34          * 函 数 名         : I2C_Start()
  35          * 函数功能                 : 起始信号：在I2C_SCL时钟信号在高电平期间I2C_SDA信号产生一个下降沿
  36          * 输    入         : 无
  37          * 输    出         : 无
  38          * 备    注         : 起始之后I2C_SDA和I2C_SCL都为0
  39          *******************************************************************************/
  40          
  41          void I2C_Start()
  42          {
  43   1              I2C_SDA = 1;
  44   1              I2C_Delay10us();
  45   1              I2C_SCL = 1;
  46   1              I2C_Delay10us();//建立时间是I2C_SDA保持时间>4.7us
  47   1              I2C_SDA = 0;
  48   1              I2C_Delay10us();//保持时间是>4us
  49   1              I2C_SCL = 0;                    
  50   1              I2C_Delay10us();                
  51   1      }
  52          /*******************************************************************************
  53          * 函 数 名           : I2C_Stop()
  54          * 函数功能               : 终止信号：在I2C_SCL时钟信号高电平期间I2C_SDA信号产生一个上升沿
C51 COMPILER V9.55   EEPROM                                                                04/19/2017 14:47:37 PAGE 2   

  55          * 输    入           : 无
  56          * 输    出               : 无
  57          * 备    注           : 结束之后保持I2C_SDA和I2C_SCL都为1；表示总线空闲
  58          *******************************************************************************/
  59          
  60          void I2C_Stop()
  61          {
  62   1              I2C_SDA = 0;
  63   1              I2C_Delay10us();
  64   1              I2C_SCL = 1;
  65   1              I2C_Delay10us();//建立时间大于4.7us
  66   1              I2C_SDA = 1;
  67   1              I2C_Delay10us();                
  68   1      }
  69          /*******************************************************************************
  70          * 函 数 名           : I2cSendByte(uchar num)
  71          * 函数功能               : 通过I2C发送一个字节。在I2C_SCL时钟信号高电平期间，
  72          *                    * 保持发送信号I2C_SDA保持稳定
  73          * 输    入           : num ,ack
  74          * 输    出               : 0或1。发送成功返回1，发送失败返回0
  75          * 备    注           : 发送完一个字节I2C_SCL=0, 需要应答则应答设置为1，否则为0
  76          *******************************************************************************/
  77          
  78          uchar I2C_SendByte(uchar dat, uchar ack)
  79          {
  80   1              uchar a = 0,b = 0;//最大255，一个机器周期为1us，最大延时255us。
  81   1                              
  82   1              for(a=0; a<8; a++)//要发送8位，从最高位开始
  83   1              {
  84   2                      I2C_SDA = dat >> 7;      //起始信号之后I2C_SCL=0，所以可以直接改变I2C_SDA信号
  85   2                      dat = dat << 1;
  86   2                      I2C_Delay10us();
  87   2                      I2C_SCL = 1;
  88   2                      I2C_Delay10us();//建立时间>4.7us
  89   2                      I2C_SCL = 0;
  90   2                      I2C_Delay10us();//时间大于4us           
  91   2              }
  92   1      
  93   1              I2C_SDA = 1;
  94   1              I2C_Delay10us();
  95   1              I2C_SCL = 1;
  96   1              while(I2C_SDA && (ack == 1))//等待应答，也就是等待从设备把I2C_SDA拉低
  97   1              {
  98   2                      b++;
  99   2                      if(b > 200)      //如果超过200us没有应答发送失败，或者为非应答，表示接收结束
 100   2                      {
 101   3                              I2C_SCL = 0;
 102   3                              I2C_Delay10us();
 103   3                              return 0;
 104   3                      }
 105   2              }
 106   1      
 107   1              I2C_SCL = 0;
 108   1              I2C_Delay10us();
 109   1              return 1;               
 110   1      }
 111          /*******************************************************************************
 112          * 函 数 名           : I2cReadByte()
 113          * 函数功能               : 使用I2c读取一个字节
 114          * 输    入           : 无
 115          * 输    出               : dat
 116          * 备    注           : 接收完一个字节I2C_SCL=0
C51 COMPILER V9.55   EEPROM                                                                04/19/2017 14:47:37 PAGE 3   

 117          *******************************************************************************/
 118          
 119          uchar I2C_ReadByte()
 120          {
 121   1              uchar a = 0,dat = 0;
 122   1              I2C_SDA = 1;                    //起始和发送一个字节之后I2C_SCL都是0
 123   1              I2C_Delay10us();
 124   1              for(a=0; a<8; a++)//接收8个字节
 125   1              {
 126   2                      I2C_SCL = 1;
 127   2                      I2C_Delay10us();
 128   2                      dat <<= 1;
 129   2                      dat |= I2C_SDA;
 130   2                      I2C_Delay10us();
 131   2                      I2C_SCL = 0;
 132   2                      I2C_Delay10us();
 133   2              }
 134   1              return dat;             
 135   1      }
 136          /*******************************************************************************
 137          * 函 数 名         : void At24c02Write(uchar addr,uchar dat)
 138          * 函数功能                 : 往24c02的一个地址写入一个数据
 139          * 输    入         : 无
 140          * 输    出         : 无
 141          *******************************************************************************/
 142          
 143          void At24c02Write(uchar addr,uchar dat)
 144          {
 145   1              I2C_Start();
 146   1              I2C_SendByte(0xa0, 1);//发送写器件地址
 147   1              I2C_SendByte(addr, 1);//发送要写入内存地址
 148   1              I2C_SendByte(dat, 0);   //发送数据
 149   1              I2C_Stop();
 150   1              Delay1ms();
 151   1      }
 152          /*******************************************************************************
 153          * 函 数 名         : uchar At24c02Read(uchar addr)
 154          * 函数功能                 : 读取24c02的一个地址的一个数据
 155          * 输    入         : 无
 156          * 输    出         : 无
 157          *******************************************************************************/
 158          
 159          uchar At24c02Read(uchar addr)
 160          {
 161   1              uchar num;
 162   1              I2C_Start();
 163   1              I2C_SendByte(0xa0, 1); //发送写器件地址
 164   1              I2C_SendByte(addr, 1); //发送要读取的地址
 165   1              I2C_Start();
 166   1              I2C_SendByte(0xa1, 1); //发送读器件地址
 167   1              num=I2C_ReadByte(); //读取数据
 168   1              I2C_Stop();
 169   1              Delay1ms();
 170   1              return num;     
 171   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    214    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
C51 COMPILER V9.55   EEPROM                                                                04/19/2017 14:47:37 PAGE 4   

   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
